// <auto-generated />
using System;
using GivingGifts.Wishlists.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GivingGifts.Wishlists.Infrastructure.Data.Migrations
{
    [DbContext(typeof(WishlistsDbContextEf))]
    [Migration("20231030184219_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GivingGifts.Wishlists.Core.WishlistAggregate.Entities.Wish", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<Guid?>("WishlistId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WishlistId");

                    b.ToTable("Wishes", (string)null);
                });

            modelBuilder.Entity("GivingGifts.Wishlists.Core.WishlistAggregate.Wishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Wishlists", (string)null);
                });

            modelBuilder.Entity("GivingGifts.Wishlists.Core.WishlistAggregate.Entities.Wish", b =>
                {
                    b.HasOne("GivingGifts.Wishlists.Core.WishlistAggregate.Wishlist", null)
                        .WithMany("Wishes")
                        .HasForeignKey("WishlistId");
                });

            modelBuilder.Entity("GivingGifts.Wishlists.Core.WishlistAggregate.Wishlist", b =>
                {
                    b.Navigation("Wishes");
                });
#pragma warning restore 612, 618
        }
    }
}
